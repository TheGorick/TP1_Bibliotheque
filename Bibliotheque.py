# Guillaume Pinat

from Abonne import Abonne
from Documents import Livre, BandeDessinee
from BaseDeDonnees import BaseDeDonnees

class Bibliotheque:
    """Gestion des abonn√©s et des documents avec SQLite"""
    def __init__(self):
        self.db = BaseDeDonnees()

    # üîπ Ajouter un abonn√©
    def ajouter_abonne(self, prenom, nom):
        # V√©rifier si l'abonn√© existe d√©j√† dans la base de donn√©es
        self.db.cur.execute("SELECT id FROM Abonnes WHERE prenom = ? AND nom = ?", (prenom, nom))
        if self.db.cur.fetchone():  # Si un r√©sultat est trouv√©, l'abonn√© existe d√©j√†
            print("Abonn√© d√©j√† existant.")
            return False

        # Ajouter l'abonn√© s'il n'existe pas encore
        self.db.cur.execute("INSERT INTO Abonnes (prenom, nom) VALUES (?, ?)", (prenom, nom))
        self.db.conn.commit()
        print(f"Abonn√© {prenom} {nom} ajout√© avec succ√®s.")
        return True

    # üîπ Supprimer un abonn√©
    def supprimer_abonne(self, prenom, nom):
        # Suppression directe de l'abonn√© sans v√©rification pr√©alable
        self.db.cur.execute("DELETE FROM Abonnes WHERE prenom = ? AND nom = ?", (prenom, nom))
        self.db.conn.commit()
        print(f"Abonn√© {prenom} {nom} supprim√© avec succ√®s.")

    # üîπ Afficher tous les abonn√©s
    def afficher_abonnes(self):
        self.db.cur.execute("SELECT prenom, nom FROM Abonnes")
        abonnes = self.db.cur.fetchall()

        if not abonnes:
            print("Aucun abonn√© enregistr√©.")
            return

        for prenom, nom in abonnes:
            print(f"{prenom} {nom}")

    # üîπ Ajouter un document
    def ajouter_document(self, document):
        type_doc = "Livre" if isinstance(document, Livre) else "Bande Dessinee"

        # V√©rifier si le document existe d√©j√†
        self.db.cur.execute("SELECT id FROM Documents WHERE titre = ?", (document.titre,))
        if self.db.cur.fetchone():
            print(f"Document '{document.titre}' d√©j√† existant.")
            return False

        # Ajouter le document √† la base de donn√©es
        self.db.cur.execute(
            "INSERT INTO Documents (titre, auteur, type, dessinateur) VALUES (?, ?, ?, ?)",
            (document.titre, document.auteur, type_doc, getattr(document, 'dessinateur', None))
        )
        self.db.conn.commit()
        print(f"Document '{document.titre}' ajout√© avec succ√®s.")
        return True

    # üîπ Supprimer un document
    def supprimer_document(self, titre):
        self.db.cur.execute("DELETE FROM Documents WHERE titre = ?", (titre,))
        self.db.conn.commit()
        print(f"Document '{titre}' supprim√© avec succ√®s.")

    # üîπ Afficher tous les documents
    def afficher_documents(self):
        self.db.cur.execute("SELECT titre, auteur, type FROM Documents")
        documents = self.db.cur.fetchall()

        if not documents:
            print("Aucun document enregistr√©.")
            return

        for titre, auteur, type_doc in documents:
            print(f"{titre} ({type_doc}) - {auteur}")